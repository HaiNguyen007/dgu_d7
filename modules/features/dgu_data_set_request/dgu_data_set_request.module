<?php
/**
 * @file
 * Code for the DGU Data set request feature.
 */

include_once 'dgu_data_set_request.features.inc';

/**
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 *
 * Implement Hook hook_form_FORM_ID_alter which:
 * -  creates our own hidden input for review status and hides the select
 * box for any user who does not have the "Dataset Request: Edit any content" permission.
 * - adds a button to submit the data request for moderation.
 */
function dgu_data_set_request_form_dataset_request_node_form_alter(&$form, &$form_state, $form_id) {

  $form['revision_information']['#type'] = 'hidden';

  $form['actions']['publish']['#access'] = TRUE;
  $form['actions']['publish']['#value'] = 'Submit for moderation';
  $form['actions']['publish']['#type'] = 'submit';
  $form['actions']['publish']['#weight'] = 6;
  $form['actions']['publish']['#submit'] = $form['actions']['submit']['#submit'];

  $form['actions']['submit']['#value'] = 'Save draft';
  $form['#submit'][] = 'dgu_data_set_request_node_submit';

  unset($form['actions']['preview']);


  if (!user_access('edit any dataset_request content')){
    $form['field_review_status'] = array(
      '#type' => 'hidden',
      '#title' => t('Review status'),
      '#value' => 0,
    );
  }

}

/**
 * Custom submit function for challenge content type.
 */
function dgu_data_set_request_node_submit($form, &$form_state) {
  if(isset($form_state['clicked_button'])) {

    $action = empty($form['#node']->nid) ? 'created' : 'updated';

    if ($form_state['clicked_button']['#value'] == "Submit for moderation") {
      $form_state['values']['workbench_moderation_state_new'] = 'needs_review';
      $message = &drupal_static(__FUNCTION__, NULL);
      $message = 'Your Data request has been ' . $action . ' and submitted for moderation. Login to your <a href="/admin/workbench">profile</a> to update it. You can submit this now or later.';
    }
    elseif ($form_state['clicked_button']['#value'] == "Save draft") {
      $form_state['values']['workbench_moderation_state_new'] = 'draft';
      $message = &drupal_static(__FUNCTION__, NULL);
      $message = 'Your draft Data request has been ' . $action . '. Login to your <a href="/admin/workbench">profile</a> to update it. You can submit this now or later.';
    }
  }
}

function dgu_data_set_request_exit() {
  if ($message = &drupal_static('dgu_data_set_request_node_submit', NULL)) {
    // Remove all status messages - most likely nothing more than '... has been created/updated'
    drupal_get_messages('status');
    // Add a message created in dgu_data_set_request_node_submit()
    drupal_set_message($message);
  }
}

function dgu_data_set_request_node_access($node) {
  if (is_object($node) && $node->type == 'dataset_request' && isset($node->field_publication_preference[LANGUAGE_NONE][0]['value']) && $node->field_publication_preference[LANGUAGE_NONE][0]['value'] == 0) {
    return NODE_ACCESS_DENY;
  }
}

function dgu_data_set_request_node_access_records($node) {
  if ($node->type == 'dataset_request' && isset($node->field_publication_preference[LANGUAGE_NONE][0]['value']) && $node->field_publication_preference[LANGUAGE_NONE][0]['value'] == 0) {
  $grants = array(
      array(
        'realm' => 'private_data_request',
        'gid' => 123,
        'grant_view' => 1,
        'grant_update' => 1,
        'grant_delete' => 1,
      )
    );
  return $grants;
  }
}

function dgu_data_set_request_node_grants($account, $op) {
  if (user_access('edit any dataset_request content', $account)) {
    $grants['private_data_request'] = array(123);
    return $grants;
  }
}