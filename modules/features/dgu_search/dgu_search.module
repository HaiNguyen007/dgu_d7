<?php
/**
 * @file
 * Code for the dgu search feature.
 */

include_once 'dgu_search.features.inc';


// Implements hook_block_info().
function dgu_search_block_info() {
  $blocks = array();
  $search_types = array(
    'app',      // Apps.
    'blog',     // Blogs.
    'forum',    // Forum topic.
    'resource', // Library resource.
  ); 

  // Create a block for each content type to search in solr.
  foreach ($search_types as $search_type) {
    $blocks['search' . $search_type] = array(
      'info' => t('Search ' . $search_type),
    );
  }

  return $blocks;
}


// Implements hook_block_view().
function dgu_search_block_view($delta = '') {
  // Get the search type from delta.
  $search_type = substr($delta, 6);

  $searchform = drupal_get_form('search_block_form');

  $block['subject'] = t('Search '. $search_type);
  $block['content'] = $searchform;
 
  return $block;
}


// Implements hook_form_alter().
function dgu_search_form_alter(&$form, &$form_state, $form_id) {
  // Add custom form submition so we can redirect.
  $form['#submit'][] = 'dgu_search_form_search_submit';

  // Add a hidden for value for subsequent search redirection.
  // @todo We need a better way than just based on url.
  $search_types = array(
    'apps' => 'app',     // Apps.
    'blog' => 'blog',     // Blogs.
    'forum' => 'forum',    // Forum topic.
    'resource' => 'resource', // Library resource.
  ); 

  if (in_array(arg(0), array_keys($search_types))) {
    $form['searchtype'] = array(
      '#type' => 'hidden', 
      '#value' => $search_types[arg(0)], 
    );
  }

}


/**
 * Added form submit function to retain filters.
 *
 * @see apachesolr_search_form_search_submit()
 */
function dgu_search_form_search_submit($form, &$form_state) {
  $fv = $form_state['values'];

  $search_types = array(
    'app',      // Apps.
    'blog',     // Blogs.
    'forum',    // Forum topic.
    'resource', // Library resource.
  ); 
  
  if (isset($fv['search_block_form']) && isset($fv['searchtype']) && in_array($fv['searchtype'], $search_types)) {
    // Replace keys with their rawurlencoded value
    $raw_keys = str_replace("/","%2f",$fv['search_block_form']);

    // Override redirect with a new bundle specific search.
    $form_state['redirect'] = "search/type/" . $fv['searchtype']. "/". $raw_keys;
  }
}